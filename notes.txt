java Script is  alone itself is not capable or is not used for backend as it lacks some capabilities 
So what Ryan dalph did was that he used the V8 engine of chrome browser (which carries out evrything) and did some experiments with it 
Now the v8 engine was made in c++ so  the js which we write cannot be used directly for our operations
So he created a  type of wrapper around the v8 engine which was of Js language
So now the js which we write can be used for backend operations and it can be used for creating and this enviornment  is called  js run time enviornment or node js
So now the js which we write can be used for backend operations......................


npm  is like app store or playstore  from where we can borrow code in form of packages
npm init -> package.json -> lekha johoka of the project ( every detail)

to use any module just use the require function 
eg  cosnt fs = require ('fs')
now  we can use all the things which fs module does or have 


note callback in js always means a  function;
eg  fs.readFile('file.txt', function(err, data){})  here the function is callback


HTTPP : 
There are some rules and regulations which are meant to be followed to do anyhting on the internet  that are set by creators of the internet
And to make sure that you follow these ruels they are preinstalled in your  pc operating system 

And http is the rule that needs to follow while sending and receiving data


npm - node package manager

**** jo  node js me preinstalled ata h ussy hum kehtey h module****
**** jo hum npm se intall krte h ussy boltey h package****

To install anything from npm we need to just use ::: npm i package_name
uninstall package -> npm uninstall package_name

installing the right version ----- nmp i package_name@version

NODE MODULE folder - >  eg when we are installing a package (accessbilty )there are chaneces that this package have some dependencies which are needed by this package therefore these dependecies or packages will be present  in the node module folder; 

dependecies :  packages and packages ki dependecies
devDependencies : aese packages jo sirf development tk kaam aye aur once after the deployment are of no use 


npm start  vs npm runs start 
see not just about start command but ----- see when we install node js , thi node js just installs some commmands  in our OS table that can be detected easily by the pc , so we dont need to use the run command
But for example we are creating our own commmands we need to  use  run satatement as to tell  system to look in Script for such kind of commmands


EXPRESS JS:
express js ek npm package h

express js is a framework( framework  gives a type of flow that u need to follow to do things , but iniside that flow u can do everything according to  you maintaing the main flow given by the framework)

express js manages everything from receiving the request and sending the response

Routing : express js
anything after the domain  name is the route 
Eg     www.youtube.com/channels till .com is the domain and after that is the route name
So to do  routing  with the help of Express we do following ::::

app.get("/", function(req,res){
    res.send("I is am the one");
})

But once the server is started we cannot  save or display any new changes done to the code on the server live 
So we use nodemon which helps us to run our live server that shows any new modifications done to our system

command line : nodemon file_name.js

MIDDLEWARE : 
If the server accepts a request  and holds that rqeuest for some time to perform some operations before sending it to the route , then this element is known as  middleware.....
eg a guard  holds and check the persons  entering and leaving  the building then this guard act as a middleware......

but there can be no middleware also between the request to server and the route.....

for eg attaching the user details to the request done by the same user......now the route will be having request plus the info about the user who did that request
eg: 
app.use(function(req,res,next){
    console.log("middleware 111");
    next();  //to send  it to next place for the request
});
next is used to tell move forward the request


Error handling :
erro  handling is done at the last of the programe......
for adding error hanler just simply use ::: default error handler epress form google

cookies : 
Hum loog forntend p kuch bhi data display kar sktey h and jb bhi aap kuch bhi request backend p krogey toh jo fornt end p saved  data h wo automatically backend p chla  jayga
